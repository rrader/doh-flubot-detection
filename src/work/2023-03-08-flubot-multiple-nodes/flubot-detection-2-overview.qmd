# Design and log of experiment 2

First experiment (see @sec-experiment-design) was a "clean room" experiment, with an infected machine without benign traffic, and two control machines with benign traffic only.

In second experiment we conduct a real-world scenario where a machine which is used to browse internet and generate benign traffic is being infected, and generate a "mixed" benign and malicious traffic.

For this experiment we use modified `traffic.py` - `traffic2.py`. Main differences:

 - No change of DoH resolvers, they are selected on the beginning of the experiment
 - No DNS cache clearing each 10 requests, to make it closer to real-world browsing: frequent cache clearing artificially increases the `\rho(a)` value.

## Network setup

We configured 2 Android x86 machines:

 - 192.168.2.217 - machine with mixed traffic, benign in A1 period; benign and infected with FluBot in A2 period (see @fig-timeline)
 - 192.168.2.149 - clean machine with DoH in Chrome enabled

Also, same as in the first experiment, we have:

 - OpenWRT router of sandbox network with IPFIXprobe running
 - Linux machine inside the sandbox network, which is used to control Android machines via ADB shell
 - Linux machine outside of the network which is used to collect traffic from IPFIXprobe and convert it to CSV

## Experiment plan

We conduct an experiment with the plan similar to the first one, collecting data in two (B1 and B2) periods (see @fig-timeline).

![Timeline](imgs/timeline.png)

 - B1: We collect a sample of traffic from the monitored network to train the scaler (see @sec-scaler)
 - B2: We collect benign (A1) and infected (A2) traffic to validate the malware detector

## Log

|Timestamp  |Time (minutes)|Duration|Log                                                    |
|-----------|--------------|--------|-------------------------------------------------------|
|9:34:00 AM |0             |0       |Started traffic2.py                                    |
|9:34:39 AM |1             |1       |B1: Start data collection (ipfixprobe and logger)      |
|10:14:44 AM|41            |40      |Stop data collection, save result to v9_1.csv          |
|11:11:34 AM|98            |57      |B2: Start data collection again (ipfixprobe and logger)|
|12:13:30 PM|160           |62      |Started infect.sh                                      |
|1:15:11 PM |221           |62      |Stop data collection, save result to v9_2.csv          |
|1:15:34 PM |222           |0       |Stop traffic2.py, save v9_exp.log                      |

## Artifacts

 - B1 part of traffic saved into `v9_1.csv`
 - B2 part of traffic saved into `v9_2.csv`
 - `traffic2.py` log is saved in `v9_exp.log`
 - High-level log with timestamps of experiment is saved in `v9_log.csv`
